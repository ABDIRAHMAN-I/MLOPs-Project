name: Build, Scan, and Push to ECR

on:
  workflow_dispatch:
    inputs:
      docker-image-name:
        description: 
        required: true
        default: 'object-detection-app'

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


        

      # 1) Set up Docker Buildx to enable multi-arch builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Lint Dockerfile
        run: docker run --rm -i hadolint/hadolint < ./app/Dockerfile || true




      # 2) Build a multi-arch image (e.g., amd64 + arm64) and push directly to ECR
      - name: Build and Push Multi-Arch Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ steps.login-ecr.outputs.registry }}/${{ github.event.inputs.docker-image-name }}:latest \
            --push ./app



      # 3) Test the image if you only need to test one architecture locally (amd64)
      - name: Test Docker image
        run: |
          docker pull ${{ steps.login-ecr.outputs.registry }}/${{ github.event.inputs.docker-image-name }}:latest
          docker run -d -p 8080:80 ${{ steps.login-ecr.outputs.registry }}/${{ github.event.inputs.docker-image-name }}:latest
          docker ps | grep ${{ github.event.inputs.docker-image-name }}



      # 4) Scan Docker Image with Trivy
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.inputs.docker-image-name }}:latest
          format: 'table'
          severity: 'CRITICAL,HIGH'